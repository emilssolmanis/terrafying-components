---
ignition:
  version: "2.1.0"


passwd:
  users:
    - name: "admin"
      passwordHash: "x"
      sshAuthorizedKeys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDlIRM5H4lz/t8PfiGptR8cWqVrD8NCwROZly1XuYooWiIdTinJAvkATdR54ic6YuNenoKOeqtTj0dkytbzi5xItBti6cqzHvFAOXhKzVCsR5n/Mdt2KPbp215pFS96yfsx/24Z4cGygXe24SEXv28KdWZ1nWQyUrlne9jMaB7n3cGzNaXOPy42l03/bAaflWoyD7gyyS9XHDuZkLxVrhtlO43UtIXL4IZzKTCy1cZdaabZxRsrSzHUp+/5p3fHYgcYmwyO0Y+W3TP6LRC2ebeQe0r4Rh1o83sRvcbmuG14Wk7wDVFtu0vjtwOflCsRHGRibep/rXvtqf1/bG3brQ9tAV3oIeZ4r4yPUZenwIfM2pQH3ElD3kqw+Pdh1la1QXb4FDxeEw29nLU1eQF6ggnp3gzJJDRQWRB/I2RjKje5M1NcKjn+8ZBG1PHBikaOkjMRkXzOb8JQxKcWmeuRHo/ZTh7oUDDMObAVej9K91eCP3Dtz5QqmL1+J4+7YCjoBOBPpX3J+mrkxHRHcJYEIyJF6/mNDtov09Vji7Rdd0j1A5CJ2fvcuuUGK0LUHMSEyzLKg830E8b/kIZrufWEsljqlcHrYCJAO/LYl77PFe6B/vNfZtyw4fI6juGDlZNYWYXLJ2c+poCS8+2o1KjCli1lV2BOAjDUKEJxQ9NAw6MxPQ== tom.booth@uswitch.com"
      groups: ["sudo", "docker"]

systemd:
  units:
    <% volumes.each { |volume| %>
    - name: "<%= volume[:mount].tr('/','-')[1..-1] %>.mount"
      enabled: true
      contents: |
        [Install]
        WantedBy=local-fs.target

        [Unit]
        Before=docker.service

        [Mount]
        What=<%= volume[:device] %>
        Where=<%= volume[:mount] %>
        Type=ext4
    <% } %>

    - name: "set-hostname.service"
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=Sets the hostname of the machine
        Before=docker.service
        After=network-online.target coreos-metadata.service
        Requires=network-online.target coreos-metadata.service

        [Service]
        EnvironmentFile=/run/metadata/coreos
        ExecStart=/opt/bin/set-hostname
        Restart=always
        RestartSec=30

    - name: "usersync.service"
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=AWS user ssh key syncing
        After=network-online.target
        Requires=network-online.target

        [Service]
        ExecStart=/opt/bin/usersync -I="root,core,fleet,systemd-coredump" -o=false -i=5 -g="<%= ssh_group %>"

        Restart=always
        RestartSec=30

    - name: "download-certs.service"
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=Download certs required by services
        Before=docker.service
        After=network-online.target
        Requires=network-online.target

        [Service]
        ExecStart=/opt/bin/s3-downloader --region "<%= region %>" <% cas.each { |ca| %>\
        <%= ca.source %>:/etc/ssl/<%= ca.name %>/ca.cert:0444 <% } %><% keypairs.each { |keypair| %>\
        <%= keypair[:source][:cert] %>:/etc/ssl/<%= keypair[:ca].name %>/<%= keypair[:name] %>/cert:0444 \
        <%= keypair[:source][:key] %>:/etc/ssl/<%= keypair[:ca].name %>/<%= keypair[:name] %>/key:0444 <% } %>

        Restart=always
        RestartSec=30

    <% units.each { |unit| %>
    - name: "<%= unit[:name] %>"
      enabled: true<% if unit.has_key?(:contents) %>
      contents: "<%= unit[:contents].dump[1..-2] %>"<% end %><% if unit.has_key?(:dropins) %>
      dropins:
        <% unit[:dropins].each { |dropin| %>
        - contents: "<%= dropin[:contents].dump[1..-2] %>"
          name: "<%= dropin[:name] %>"
        <% } %><% end %>
    <% } %>


storage:
  <% if volumes.count > 0 %>
  filesystems:
    <% volumes.each { |volume| %>
    - name: <%= volume[:mount].tr('/','-')[1..-1] %>
      mount:
        device: <%= volume[:device] %>
        format: ext4
    <% } %>
  <% end %>
  files:
    <% files.each { |file| %>
    - filesystem: "root"
      path: <%= file[:path] %>
      mode: <%= file[:mode] %>
      user: { id: 0 }
      group: { id: 0 }
      contents: "<%= file[:contents].gsub(/\n/, '\\n').gsub(/\"/, '\\"') %>"
    <% } %>

    - filesystem: "root"
      path: "/opt/bin/set-hostname"
      mode: 0755,
      user: { id: 0 }
      group: { id: 0}
      contents: |
        #!/bin/bash
        ec2_host="$(echo ${COREOS_EC2_HOSTNAME} | cut -d'.' -f 1)"
        echo "${ec2_host}.${COREOS_EC2_REGION}.compute.internal" > /etc/hostname
        echo "MACHINE_HOSTNAME=$(cat /etc/hostname)" >> /etc/environment
        hostnamectl set-hostname "$(cat /etc/hostname)"
        systemctl daemon-reload

    - filesystem: "root"
      path: "/etc/motd.d/uswitch.conf"
      mode: 0644,
      user: { id: 0 }
      group: { id: 0}
      contents: |

          $$$$$        $$$$$
          $$$$$        $$$$$
          $$$$$        $$$$$
          $$$$$        $$$$$
          $$$$$        $$$$$
          $$$$$     .  $$$$$
          $$$$$.   .$a $$$$$
          `$$$$$$aaaPIL. $$$
          ^$$$$$$$'$$^ $$$$.
